/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.79
 * Generated at: 2023-09-19 05:59:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class reg_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\" />\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write(".total {\r\n");
      out.write("	position: relative;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	border-top: 6px solid #0078d4;\r\n");
      out.write("	margin-top: -8px;\r\n");
      out.write("	/* border: 1px solid black; */\r\n");
      out.write("	font-family: \"돋움\", Dotum, \"맑은 고딕\", \"Malgun Gothic\", \"Apple Gothic\",\r\n");
      out.write("		sans-serif;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".image-logo {\r\n");
      out.write("	width: 97px;\r\n");
      out.write("	height: 79px;\r\n");
      out.write("	margin-top: 45px;\r\n");
      out.write("	margin-bottom: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".wrap {\r\n");
      out.write("	border: solid 2px var(--GRAY125S, #e5e5e5);\r\n");
      out.write("	width: 580px;\r\n");
      out.write("	justify-content: space-between;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".body {\r\n");
      out.write("	width: 600px;\r\n");
      out.write("	/* border: solid 2px var(--GRAY125S, #e5e5e5); */\r\n");
      out.write("	/* border: 1px solid black; */\r\n");
      out.write("	border-radius: 2px;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	font-family: \"Apple SD Gothic Neo\", \"Noto Sans KR\", \"맑은 고딕\",\r\n");
      out.write("		\"Malgun Gothic\", 돋움, Dotum, sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#login-form {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	margin: 70px 68px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#login-form input {\r\n");
      out.write("	padding: 10px px 0px;\r\n");
      out.write("	border: 0 solid black;\r\n");
      out.write("	font-size: 18px;\r\n");
      out.write("	border-bottom: 1px solid rgba(0, 0, 0, 1);\r\n");
      out.write("	margin-bottom: 46px;\r\n");
      out.write("	transition: border-color 0.3s ease-in-out;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#login-form input:not([type=\"submit\"]) {\r\n");
      out.write("	border-bottom: 1px solid rgba(0, 0, 0, 1);\r\n");
      out.write("	transition: border-color 0.3s ease-in-out;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#login-form input::placeholder {\r\n");
      out.write("	color: rgba(0, 0, 0, 1);\r\n");
      out.write("	border: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btnmenu {\r\n");
      out.write("	width: 585px;\r\n");
      out.write("	height: 450px;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btnmenu a {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	color: black;\r\n");
      out.write("	font-size: 18px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn1 {\r\n");
      out.write("	width: 440px;\r\n");
      out.write("	height: 60px;\r\n");
      out.write("	background-color: #0078d4;\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-radius: 7px;\r\n");
      out.write("	margin-top: 51px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn2 {\r\n");
      out.write("	width: 440px;\r\n");
      out.write("	height: 60px;\r\n");
      out.write("	background-color: #f0f0f0;\r\n");
      out.write("	border-radius: 7px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	margin-top: 22px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".checkboxwrap {\r\n");
      out.write("	/* border: 1px solid black; */\r\n");
      out.write("	float: left;\r\n");
      out.write("	margin-left: 70px;\r\n");
      out.write("	margin-top: -233px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".hr-sect {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-basis: 100%;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	color: rgba(0, 0, 0, 0.2);\r\n");
      out.write("	font-size: 12px;\r\n");
      out.write("	margin: 13px 65px;\r\n");
      out.write("	margin-top: -95px;\r\n");
      out.write("	margin-bottom: -3px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".hr-sect::before, .hr-sect::after {\r\n");
      out.write("	content: \"\";\r\n");
      out.write("	flex-grow: 1;\r\n");
      out.write("	background: rgba(0, 0, 0, 0.2);\r\n");
      out.write("	height: 1px;\r\n");
      out.write("	font-size: 0px;\r\n");
      out.write("	line-height: 0px;\r\n");
      out.write("	margin: 0px 16px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<form action=\"reg.do\" method=\"post\">\r\n");
      out.write("<ul>\r\n");
      out.write("	<li><input type=\"text\" name=\"id\"></li>\r\n");
      out.write("	<li><input type=\"text\" name=\"pw\"></li>\r\n");
      out.write("	<li><input type=\"text\" name=\"name\"></li>\r\n");
      out.write("	<li><input type=\"text\" name=\"birth\"></li>\r\n");
      out.write("	<li><input type=\"text\" name=\"tel\"></li>\r\n");
      out.write("	<button>zmㄻㄴㅇ</button>\r\n");
      out.write("</ul>\r\n");
      out.write("</form>\r\n");
      out.write("	");

	// LoginServlet에서 전달한 메시지를 확인하고 출력
	String message = (String) request.getAttribute("message");
	if (message != null) {
	
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("    alert('");
      out.print(message);
      out.write("');\r\n");
      out.write("	</script>\r\n");
      out.write("	");

	}
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
